 ## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=9u6mupjj

#inserts to database
#INSERT INTO room_modes(mode_id, name, owner, selected, is_public, temperature, humidity, uv_index, light_frequency) VALUES (1, 'EVENING', 'all', 'f', 't', 20, 40, 1, '10000-30000');
#INSERT INTO room_modes(mode_id, name, owner, selected, is_public, temperature, humidity, uv_index, light_frequency) VALUES (2, 'RELAX', 'all', 'f', 't', 23, 43, 1, '2000-4000');
#INSERT INTO room_modes(mode_id, name, owner, selected, is_public, temperature, humidity, uv_index, light_frequency) VALUES (3, 'WORK', 'all', 'f', 't', 21, 53, 1, '15000-30000');
#INSERT INTO room_modes(mode_id, name, owner, selected, is_public, temperature, humidity, uv_index, light_frequency) VALUES (4, 'DAY', 'all', 'f', 't', 21, 40, 1, '0-1000');
#INSERT INTO room_modes(mode_id, name, owner, selected, is_public, temperature, humidity, uv_index, light_frequency) VALUES (5, 'NIGHT', 'all', 'f', 't', 18, 38, 1, '0-9000');
#INSERT INTO room_modes(mode_id, name, owner, selected, is_public, temperature, humidity, uv_index, light_frequency) VALUES (6, 'FILM', 'all', 'f', 't', 22, 52, 1, '0-6000');






# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#Change ESP location properties
# temperature
temperature.temperatureAddress=http://localhost:
temperature.temperaturePort=3333
temperature.temperatureUrl=temperature
# humidity
humidity.humidityAddress=http://localhost:
humidity.humidityPort=3333
humidity.humidityUrl=humidity
# light
light.lightAddress=http://localhost:
light.lightPort=3333
light.lightUrl=light

#mock
mock.value=false
# temperature mock
temperature.mock.temperatureAddressMock=http://localhost:
temperature.mock.temperaturePortMock=8080
temperature.mock.temperatureUrlMock=/mock/esp/temperature/
# humidity mock
humidity.mock.humidityAddressMock=http://localhost:
humidity.mock.humidityPortMock=8080
humidity.mock.humidityUrlMock=/mock/esp/humidity/
# light mock
light.mock.lightAddressMock=http://localhost:
light.mock.lightPortMock=8080
light.mock.lightUrlMock=/mock/esp/light/

